package com.example.roomdatabase

import android.os.Parcel
import android.os.Parcelable
import androidx.room.ColumnInfo
import androidx.room.Entity
import androidx.room.PrimaryKey
import java.io.Serializable

@Entity(tableName = "employee-table") /// we define the table name here that will be used to store the entity
data class EmployeeEntity(
    /// we need to make all variables var, else we get an error nowadays
    @PrimaryKey(autoGenerate = true)
    var id: Int = 0, /// this will be the primary key, it will be autogenerated, here incremented
    var name: String = "", /// if we don't define a column name then it will be same as the variable name
    @ColumnInfo(name = "email-id") /// now the email field in table will have column name `email-id`
    var email: String = "",
)
//    : Serializable
    : Parcelable {
    //// `Parcelable` is faster than Serializable as this creates less garbage elements
    constructor(parcel: Parcel) : this(
        parcel.readInt(),
        parcel.readString() ?: "", /// if name is null then ""
//        parcel.readString()!!, /// we can use bang operators as we know this will not be null
        parcel.readString() ?: "", /// if email is null then ""
    ) {
    }

    override fun writeToParcel(parcel: Parcel, flags: Int) {
        parcel.writeInt(id)
        parcel.writeString(name)
        parcel.writeString(email)
    }

    override fun describeContents(): Int {
        return 0
    }

    companion object CREATOR : Parcelable.Creator<EmployeeEntity> {
        override fun createFromParcel(parcel: Parcel): EmployeeEntity {
            return EmployeeEntity(parcel)
        }

        override fun newArray(size: Int): Array<EmployeeEntity?> {
            return arrayOfNulls(size)
        }
    }
}